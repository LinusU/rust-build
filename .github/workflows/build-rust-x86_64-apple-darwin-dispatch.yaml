name: Build macos-latest (darwin) x86_64

on:
  workflow_dispatch:
    inputs:
      rust_build_branch:
        description: 'Branch of rust-build to use'
        required: true
        default: 'main'
      release_version:
        description: 'Release Version for generation'
        required: true
        default: '1.60.0.0'
      rust_version:
        description: 'Version of esp rust to use'
        required: true
        default: '1.60.0'


# We Break this down into individual jobs to avoid disk space issues
jobs:

  build-rustc:
    # Build the compiler / std library
    name: Build (idf) rustc/std for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:

        - os: macos-latest
          target_name: x86_64-apple-darwin
          llvm_root_option: ''

    steps:
      - uses: actions/checkout@v2
        with:
          path: "rust-build"
          ref: ${{ github.event.inputs.rust_build_branch }}
      - uses: ./rust-build/.github/actions/util/setup-envs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./rust-build/.github/actions/tools/setup-python
      - uses: ./rust-build/.github/actions/tools/setup-ninja
      - uses: ./rust-build/.github/actions/util/checkout-esp-rust
      - uses: ./rust-build/.github/actions/util/symlink-working-dir
      - uses: ./rust-build/.github/actions/build/build-rustc
      - uses: ./rust-build/.github/actions/build/build-rust-std


  build-tools:
    # Build the tools - cargo / rustfmt
    name: Build (idf) rust tools for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:

        - os: macos-latest
          target_name: x86_64-apple-darwin
          llvm_root_option: ''

    steps:
      - uses: actions/checkout@v2
        with:
          path: "rust-build"
          ref: ${{ github.event.inputs.rust_build_branch }}
      - uses: ./rust-build/.github/actions/util/setup-envs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./rust-build/.github/actions/tools/setup-python
      - uses: ./rust-build/.github/actions/tools/setup-ninja
      - uses: ./rust-build/.github/actions/util/checkout-esp-rust
      - uses: ./rust-build/.github/actions/util/symlink-working-dir
      - uses: ./rust-build/.github/actions/build/build-tools


  upload-archive:
    # Uploads a merged archive
    name: Upload (idf) rust release for ${{ matrix.os }}
    needs: [build-rustc, build-tools]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:

        - os: macos-latest
          target_name: x86_64-apple-darwin
          llvm_root_option: ''

    steps:
      - uses: actions/checkout@v2
        with:
          path: "rust-build"
          ref: ${{ github.event.inputs.rust_build_branch }}
      - uses: ./rust-build/.github/actions/util/setup-envs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./rust-build/.github/actions/util/create-archive
      - uses: ./rust-build/.github/actions/util/upload
